with films as(
  select *
  from robust-arcadia-453221-u5.staging_db.stg_film
)

, inventory as(
  select *
  from robust-arcadia-453221-u5.staging_db.stg_inventory
)

, rentals as(
  select *
  from robust-arcadia-453221-u5.staging_db.stg_rental
)

-- the below CTE creates the film dataset that should be considered, which excludes certain values
, film_inclusion as(
  select
    rentals.rental_id,
    films.film_id,
    films.film_title,
    film_rental_duration
  from rentals
  left join inventory
    on rentals.inventory_id = inventory.inventory_id
  left join films
    on inventory.film_id = films.film_id
  where films.film_title != 'GOODFELLAS SALUTE'
)

, payments as(
  select
    rental_id,
    payment_date,
    customer_id,
    payment_amount
  from robust-arcadia-453221-u5.staging_db.stg_payment
)

-- the below CTE is adjusted by including an inner join to keep only the film ids we want
, payments_adj as(
  select
    payments.rental_id,
    payments.payment_date,
    payments.customer_id,
    payments.payment_amount
  from payments
  inner join film_inclusion
    on payments.rental_id = film_inclusion.rental_id
)

, customer as(
  select *
  from robust-arcadia-453221-u5.staging_db.stg_customer
)

, reporting_dates as(
  select *
  from robust-arcadia-453221-u5.reporting_db.reporting_periods_table
  where reporting_period in ('Day','Month','Year')
)

, revenue_per_period as(
  select
    'Day' as reporting_period
    , date_trunc(payments_adj.payment_date, day) as reporting_date
    , customer.customer_id
    , sum(payment_amount) as total_revenue
  from payments_adj
  left join customer on payments_adj.customer_id = customer.customer_id
  group by 1, 2, 3

  union all

  select
    'Month' as reporting_period
    , date_trunc(payments_adj.payment_date, month) as reporting_date
    , customer.customer_id
    , sum(payment_amount) as total_revenue
  from payments_adj
  left join customer on payments_adj.customer_id = customer.customer_id
  group by 1, 2, 3

  union all

  select
    'Year' as reporting_period
    , date_trunc(payments_adj.payment_date, year) as reporting_date
    , customer.customer_id
    , sum(payment_amount) as total_revenue
  from payments_adj
  left join customer on payments_adj.customer_id = customer.customer_id
  group by 1, 2, 3
)

, final as(
  select
    reporting_dates.reporting_period
   , reporting_dates.reporting_date
   , revenue_per_period.customer_id
   , revenue_per_period.total_revenue
  from reporting_dates
  inner join revenue_per_period
    on reporting_dates.reporting_period = revenue_per_period.reporting_period
    and reporting_dates.reporting_date = revenue_per_period.reporting_date
  where reporting_dates.reporting_period = 'Day'
  
  union all

  select
    reporting_dates.reporting_period
   , reporting_dates.reporting_date 
   , revenue_per_period.customer_id
   , revenue_per_period.total_revenue
  from reporting_dates
  inner join revenue_per_period
    on reporting_dates.reporting_period = revenue_per_period.reporting_period
    and reporting_dates.reporting_date = revenue_per_period.reporting_date
  where reporting_dates.reporting_period = 'Month'

  union all

  select
    reporting_dates.reporting_period
   , reporting_dates.reporting_date 
   , revenue_per_period.customer_id
   , revenue_per_period.total_revenue
  from reporting_dates
  inner join revenue_per_period
    on reporting_dates.reporting_period = revenue_per_period.reporting_period
    and reporting_dates.reporting_date = revenue_per_period.reporting_date
  where reporting_dates.reporting_period = 'Year'
)

select *
from final
